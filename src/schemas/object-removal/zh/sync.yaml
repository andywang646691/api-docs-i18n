
openapi: "3.0.0"
info:
  title: "Object Removal API"
  description: "Remove the object of any image"
  version: "1.0.0"
servers:
  - url: "https://techsz.aoscdn.com"
security:
  - APIKeyHeader: []
paths:
  /api/tasks/visual/inpaint:
    post:
      tags:
        - "图像修复"
      summary: 创建图像修复任务
      description: |
        创建图像修复任务

        * 图片大小: 不超过 15 MB
        * 图片来源：文件上传（二进制）或从 URL 下载
        * 图片内容: 任何带有前景的照片（例如人物、产品、动物、汽车等）

        消耗：每次消耗`1点`
      parameters:
        - in: header
          name: X-API-KEY
          schema:
            type: string
          required: true
          description: API Key
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTaskReqBody'
      responses:
        200:
          description: 任务创建成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultResponse'
        400:
          description: "客户端参数传递错误。 请检查参数是否缺失或值是否正确"
        401:
          description: "认证失败。 请检查X-API-KEY是否正确或者服务是否开通"
        429:
          description: "请求频率超出QPS限制（默认QPS为2）。请放缓请求速率，或者联系商务提升QPS限制"
  #          content:
  #            "*/*":
  #              schema:
  #                $ref: '#/components/schemas/RateLimit'

components:
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    CreateTaskReqBody:
      type: object
      properties:
        image_file:
          type: string
          format: binary
          description: 源图像文件（二进制）。（如果此参数存在，则其他图像源参数必须为空）


        image_url:
          type: string
          description: 源图像URL。(如果存在此参数，则其他图像源参数必须为空)
        sync:
          type: integer
          enum: [ 0, 1 ]
          default: 1
          description: |
            是否等待结果就绪并立即返回（默认值：0）。如果设为1，API将会等待结果准备好后立即返回。如果设为0，API将返回 task_id，稍后可通过 /{task_id} 端点获取结果。请注意，请求提交后，结果最多只会保留1个小时。
        mask_file:
          type: string
          format: binary
          description: 蒙版图像文件（二进制）。（如果此参数存在，则其他蒙版图像源参数必须为空）
        mask_url:
          type: string
          description: 蒙版图像URL。(如果存在此参数，则其他蒙版图像源参数必须为空)
        mask_base64:
          type: string
          description: 蒙版图像文件(Base64编码的字符串)。(如果存在此参数，则其他蒙版图像源参数必须为空)
        rectangles:
          type: string
          description: |
            一个或多个矩形区域，用于指定需要擦除的区域, 最多支持 50 个矩形区域。

            例如：

            [{"x":0,"y":0,"width":100,"height":100}]

            [{"x":0,"y":0,"width":100,"height":100},{"x":50,"y":200,"width":100,"height":100}]
        return_type:
          type: integer
          enum: [1, 2, 3]
          default: 1
          description: |
            1 = 返回图片的下载URL。

            2 = 以base64字符串形式返回图片。
    TaskCreateJsonResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
          description: |
            Status of the request:
            200 = Request was successful
        message:
          type: string
          example: "ok"
          description: |
            返回的信息说明。

            如果失败，可以参考此参数返回的信息，或者携带此参数寻找相应客服人员。
        data:
          type: object
          properties:
            task_id:
              type: string
              description: 任务 ID
              example: "94806a3f-1173-4afb-9bcc-3ff19c0981f4"
    TaskResultResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
          description: |
            Status of the request:
            200 = Request was successful
        message:
          type: string
          example: "ok"
          description: |
            返回的信息说明。

            如果失败，可以参考此参数返回的信息，或者携带此参数寻找相应客服人员。
        data:
          type: object
          properties:
            created_at:
              type: string
              description: 任务创建时间戳。
              example: "1634884056"
            processed_at:
              type: string
              description: 任务开始被处理的时间戳。
              example: "1634884056"
            completed_at:
              type: string
              description: 任务完成的时间戳。
              example: "1634884056"
            image:
              type: string
              description: 结果图片下载URL
              example: "https://wxtechsz.oss-cn-shenzhen.aliyuncs.com/tasks/output/inpaint/93a5e47b-a9c1-47ac-9b5e-22cb89f7d358-image.jpg"
            task_id:
              type: string
              description: 任务 ID。 如果任务失败，请携带此参数寻找相应客服人员
              example: "94806a3f-1173-4afb-9bcc-3ff19c0981f4"
            progress:
              type: integer
              description: 任务处理进度。
              example: 100
            state:
              type: integer
              description: 任务处理状态 ( -7 = 无效图片文件)
              example: 1
    RateLimit:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: Error message
                example: Rate limit exceeded
    AuthFailed:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: Error message
                example: Missing API Key

